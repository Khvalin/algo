package main

import "fmt"


func maxSizeSlices(slices []int) int {
  res := 0
  l := len(slices)
  sum := [...][]int{make([]int, l), make([]int, l)}
  
  for i, n := range slices {
    m0, m1 := 0, 0

    if i > 1 {
      if i - 2 == 0 {
        m0 = 0
        m1 = slices[0]
      } else {
        m0 = sum[0][i - 2]
        m1 = sum[1][i - 2]
      }
    }
    
    if i > 2 {
      if sum[0][i - 3] > m0 {
        m0 = sum[0][i - 3]
      }
      if sum[1][i - 3] > m1{
        m1 = sum[1][i - 3]
      }
    }
    
    if i == l - 1 {
      m1 = 0
    }
    
    sum[0][i] = n + m0
    sum[1][i] = n + m1

    if sum[0][i] > res {
      res = sum[0][i] 
    }
    if sum[1][i] > res {
      res = sum[1][i]
    }
  }

	return res
}

func main() {
	  fmt.Println(1321,maxSizeSlices([]int {414,128,718,450,603,134 }))
	//fmt.Println(130243, maxSizeSlices([]int{151, 489, 295, 91, 313, 371, 51, 291, 541, 545, 501, 568, 961, 679, 574, 468, 641, 918, 410, 679, 166, 45, 254, 212, 989, 533, 692, 836, 297, 19, 898, 819, 881, 853, 79, 832, 158, 961, 822, 868, 71, 337, 117, 860, 40, 734, 102, 397, 60, 104, 802, 433, 747, 737, 954, 506, 370, 15, 988, 693, 929, 606, 800, 945, 745, 163, 474, 62, 831, 521, 741, 171, 8, 510, 822, 682, 752, 700, 15, 354, 822, 737, 434, 564, 925, 982, 236, 306, 788, 773, 707, 31, 177, 177, 38, 256, 357, 14, 956, 137, 483, 733, 901, 650, 964, 820, 802, 293, 312, 420, 997, 509, 242, 504, 165, 436, 362, 897, 521, 642, 408, 904, 795, 5, 260, 335, 960, 347, 188, 654, 783, 106, 958, 811, 790, 424, 194, 95, 420, 237, 380, 587, 897, 710, 900, 869, 459, 162, 172, 663, 357, 28, 736, 483, 641, 373, 850, 180, 369, 956, 565, 514, 887, 90, 149, 22, 288, 607, 94, 454, 49, 554, 926, 451, 223, 785, 354, 712, 856, 296, 459, 746, 544, 346, 901, 134, 308, 825, 152, 966, 907, 72, 372, 246, 993, 786, 358, 953, 688, 422, 249, 790, 783, 907, 739, 381, 933, 15, 854, 311, 723, 657, 900, 613, 504, 887, 228, 140, 79, 296, 754, 902, 921, 621, 82, 485, 968, 709, 183, 292, 488, 355, 123, 206, 692, 81, 298, 302, 538, 530, 497, 388, 388, 320, 562, 659, 308, 99, 440, 917, 380, 476, 624, 147, 837, 684, 62, 414, 864, 392, 796, 75, 123, 587, 297, 932, 131, 735, 317, 513, 348, 901, 644, 695, 200, 931, 359, 458, 758, 221, 317, 338, 986, 306, 220, 193, 633, 875, 883, 192, 508, 155, 786, 905, 596, 799, 373, 641, 945, 250, 681, 222, 768, 52, 675, 793, 76, 371, 529, 162, 70, 347, 48, 979, 880, 276, 873, 39, 432, 613, 15, 780, 983, 336, 772, 657, 339, 270, 936, 120, 159, 680, 357, 380, 931, 649, 185, 912, 905, 57, 689, 238, 388, 560, 247, 918, 552, 275, 900, 503, 168, 3, 645, 717, 862, 150, 460, 203, 478, 932, 884, 396, 310, 472, 477, 645, 949, 457, 430, 421, 28, 601, 348, 936, 516, 958, 95, 564, 49, 313, 644, 615, 769, 705, 283, 871, 693, 456, 46, 138, 104, 9, 49, 255, 251, 899, 651, 208, 346, 798, 939, 710, 679, 620, 817, 26, 350, 72, 833, 238, 954, 904, 46, 283, 847, 326, 675, 363, 527, 649, 388, 153, 354, 64, 560, 726, 576, 177, 724, 944, 679, 7, 69, 269, 172, 567, 970, 769, 475, 793, 689, 791, 959, 139, 345, 542, 264, 16, 421, 541, 722, 950, 804, 3, 872, 420, 113, 956, 621, 61, 545, 167, 861, 800, 631, 529, 258, 912, 837, 132, 908, 858, 958, 811, 515, 487, 1, 542, 685, 783, 424, 444, 354, 660, 167, 505, 532, 733, 576, 466, 82, 630, 626, 659, 952, 852, 468, 177}))
}
